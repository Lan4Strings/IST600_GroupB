qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
n<-1000
testx<-seq(0,10,0.05)
Weibull<-function(y){
return(k*y^(k-1)*exp(-y^k))
}
u<-runif(10000,0,1)
k<-1/5
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/5',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-1/2
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=1/2',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
k<-2/3
y<-(-log(1-u))^(1/k)
Y<-Weibull(y)
v<-runif(10000,0,1)
X<-Y[v<=exp(-Y+Y^k+k^(-1/(k-1))-k^(-k/(k-1)))][1:1000]
Z<-rgamma(n,k)
qqplot(X,Z,xlab='AR Weibull',ylab='RGamma',main='QQplot k=2/3',xlim=c(0,1),ylim=c(0,1))
lines(testx,testx)
x<-1:10
split(x,3)
split(x,2)
split(x,factor(3,4))
y<-as.factor(c(1,2))
split(x,y)
y<-as.factor(c(1,2,1))
split(x,y)
split(x,level(x))
split(x,levels(x))
split(y,levels(y))
y<-as.factor(c(1,2,1))
split(y,levels(y))
factor(y,levels(y))
y
load("C:/Users/Lan/Documents/GitHub/IST600_GroupB/Data/datamerged.Rdata")
View(datamerged)
View(datamerged)
data<-read.csv("2017.1-2018.1.csv")
setwd("~/GitHub/IST600_GroupB/Data")
data<-read.csv("2015.1-2016.1.csv")
datanew<-data.frame(data)
str(datanew)
as.numeric(datanew$StNum)
as.character(datanew$StNum)
list<-as.character(datanew$StNum)
list[100]
?gsub
gsub("-.*^","",list)
gsub("\-.*^","",list)
list<-as.character(datanew$StNum)
View(data.frame(list))
gsub("-.*","",list)
list<-as.numeric(gsub("-.*","",list))
list<-as.numeric(gsub("-.*","",list))
list/100
floor(list/100)
floor(list/100)*100
View(datamerged)
View(data.frame(datamerged$block.address,datamerged$FullAdd))
2017data<-data.frame(datamerged$block.address,datamerged$FullAdd
datablock2017<-data.frame(datamerged$block.address,datamerged$FullAdd
)
save(datablock2017,flie="datablock2017.Rdata")
save(datablock2017,flie="datablock2017.Rdata")
save(datablock2017,file="datablock2017.Rdata")
View(datamerged)
data<-read.csv("2017.1-2018.1.csv")
datanew<-data.frame(data)
datanew$block.address<-gsub("\\s?&.*$","",datanew$block.address)
datanew$block.address<-gsub("AVE$","AV",datanew$block.address)
datanew$block.address<-gsub("GRN$","GREEN",datanew$block.address)
datanew$block.address<-tolower(datanew$block.address)
datanew$block.address<-gsub(" rear.*$","",datanew$block.address)
datanew$block.address<-gsub(" to .*$","",datanew$block.address)
datanew$block.address<-gsub(" #.*$","",datanew$block.address)
crimedata<-read.csv("crime2017.csv")
datacrime<-data.frame(crimedata)
datacrime$Address<-tolower(datacrime$Address)
South<-unlist(gregexpr(" s ",datacrime$Address))
South<-as.numeric(gsub(-1,0,South))
datacrime$Address<-gsub(" s "," ",datacrime$Address)
datacrime$Address[South==TRUE]<-paste(datacrime$Address[South==TRUE],"s")
North<-unlist(gregexpr(" n ",datacrime$Address))
North<-as.numeric(gsub(-1,0,North))
datacrime$Address<-gsub(" n "," ",datacrime$Address)
datacrime$Address[North==TRUE]<-paste(datacrime$Address[North==TRUE],"n")
East<-unlist(gregexpr(" e ",datacrime$Address))
East<-as.numeric(gsub(-1,0,East))
datacrime$Address<-gsub(" e "," ",datacrime$Address)
datacrime$Address[East==TRUE]<-paste(datacrime$Address[East==TRUE],"e")
West<-unlist(gregexpr(" w ",datacrime$Address))
West<-as.numeric(gsub(-1,0,West))
datacrime$Address<-gsub(" w "," ",datacrime$Address)
datacrime$Address[West==TRUE]<-paste(datacrime$Address[West==TRUE],"w")
datamerged<-merge(datanew,datacrime,by.x="block.address",by.y="Address"
,all.y=TRUE
)
datamerged$Aggravated.assault[is.na(datamerged$Aggravated.assault)]<-0
datamerged$Arson[is.na(datamerged$Arson)]<-0
datamerged$Burglary[is.na(datamerged$Burglary)]<-0
datamerged$Larceny[is.na(datamerged$Larceny)]<-0
datamerged$Murder[is.na(datamerged$Murder)]<-0
datamerged$Robbery[is.na(datamerged$Robbery)]<-0
datamerged$Vehicle.theft[is.na(datamerged$Vehicle.theft)]<-0
save(datamerged,file="datamerged.Rdata")
missdata<-datamerged[is.na(datamerged$Sec_Block),]
sum(datamerged$Total[is.na(datamerged$Sec_Block)])
sum(datamerged$Total)
View(datamerged)
datamerged<-datamerger[!duplicated(datamerged$FullAdd),]
datamerged<-datamerged[!duplicated(datamerged$FullAdd),]
View(datamerged)
save(datamerged,file="datamerged.Rdata")
datafire<-read.csv("fire_counts_2017.csv")
datafire$Address<-tolower(datafire$Address)
View(datafire)
South<-unlist(gregexpr(" s ",datafire$Address))
South<-as.numeric(gsub(-1,0,South))
datafire$Address<-gsub(" s "," ",datafire$Address)
datafire$Address[South==TRUE]<-paste(datafire$Address[South==TRUE],"s")
South<-unlist(gregexpr(" s ",datafire$Address))
South<-as.numeric(gsub(-1,0,South))
datafire$Address<-gsub(" s "," ",datafire$Address)
datafire$Address[South==TRUE]<-paste(datafire$Address[South==TRUE],"s")
North<-unlist(gregexpr(" n ",datafire$Address))
North<-as.numeric(gsub(-1,0,North))
datafire$Address<-gsub(" n "," ",datafire$Address)
datafire$Address[North==TRUE]<-paste(datafire$Address[North==TRUE],"n")
East<-unlist(gregexpr(" e ",datafire$Address))
East<-as.numeric(gsub(-1,0,East))
datafire$Address<-gsub(" e "," ",datafire$Address)
datafire$Address[East==TRUE]<-paste(datafire$Address[East==TRUE],"e")
West<-unlist(gregexpr(" w ",datafire$Address))
West<-as.numeric(gsub(-1,0,West))
datafire$Address<-gsub(" w "," ",datafire$Address)
datafire$Address[West==TRUE]<-paste(datafire$Address[West==TRUE],"w")
View(datafire)
View(datafire)
View(datamerged)
datanew$newaddress<-datanew$FullAdd
datanew$newaddress<-tolower(datanew$FullAdd)
datanew$newaddress<-datanew$FullAdd
datanew$newaddress<-gsub("\\s?&.*$","",datanew$newaddress)
datanew$newaddress<-gsub("AVE$","AV",datanew$newaddress)
datanew$newaddress<-gsub("GRN$","GREEN",datanew$newaddress)
datanew$newaddress<-tolower(datanew$newaddress)
datanew$newaddress<-gsub(" rear.*$","",datanew$newaddress)
datanew$newaddress<-gsub(" to .*$","",datanew$newaddress)
datanew$newaddress<-gsub(" #.*$","",datanew$newaddress)
View(datanew)
datanew$newaddress<-gsub("-\d*","",datanew$newaddress)
datanew$newaddress<-gsub("-\\d*","",datanew$newaddress)
datanew$newaddress<-gsub("1/\\d ","",datanew$newaddress)
datanew$newaddress<-gsub("/\\d","",datanew$newaddress)
datanew$block.address<-gsub("\\s?&.*$","",datanew$block.address)
datanew$block.address<-gsub("AVE$","AV",datanew$block.address)
datanew$block.address<-gsub("GRN$","GREEN",datanew$block.address)
datanew$block.address<-tolower(datanew$block.address)
datanew$block.address<-gsub(" rear.*$","",datanew$block.address)
datanew$block.address<-gsub(" to .*$","",datanew$block.address)
datanew$block.address<-gsub(" #.*$","",datanew$block.address)
crimedata<-read.csv("crime2017.csv")
datacrime<-data.frame(crimedata)
datacrime$Address<-tolower(datacrime$Address)
South<-unlist(gregexpr(" s ",datacrime$Address))
South<-as.numeric(gsub(-1,0,South))
datacrime$Address<-gsub(" s "," ",datacrime$Address)
North<-unlist(gregexpr(" n ",datacrime$Address))
North<-as.numeric(gsub(-1,0,North))
datacrime$Address<-gsub(" n "," ",datacrime$Address)
datacrime$Address[South==TRUE]<-paste(datacrime$Address[South==TRUE],"s")
datacrime$Address[North==TRUE]<-paste(datacrime$Address[North==TRUE],"n")
East<-unlist(gregexpr(" e ",datacrime$Address))
East<-as.numeric(gsub(-1,0,East))
datacrime$Address<-gsub(" e "," ",datacrime$Address)
datacrime$Address[East==TRUE]<-paste(datacrime$Address[East==TRUE],"e")
West<-unlist(gregexpr(" w ",datacrime$Address))
West<-as.numeric(gsub(-1,0,West))
datacrime$Address<-gsub(" w "," ",datacrime$Address)
datacrime$Address[West==TRUE]<-paste(datacrime$Address[West==TRUE],"w")
datamerged<-merge(datanew,datacrime,by.x="block.address",by.y="Address"
,all.y=TRUE
)
datamerged$Aggravated.assault[is.na(datamerged$Aggravated.assault)]<-0
datamerged$Arson[is.na(datamerged$Arson)]<-0
datamerged$Burglary[is.na(datamerged$Burglary)]<-0
datamerged$Larceny[is.na(datamerged$Larceny)]<-0
datamerged$Murder[is.na(datamerged$Murder)]<-0
datamerged$Robbery[is.na(datamerged$Robbery)]<-0
datamerged$Vehicle.theft[is.na(datamerged$Vehicle.theft)]<-0
datamerged<-datamerged[!duplicated(datamerged$FullAdd),]
View(datamerged)
View(datafire)
datamergedfire<-merge(datamerged,datafire,by.x="newaddress",by.y="Address"
,all.y=TRUE)
View(datamergedfire)
datamerged$newaddress[datamerged$newaddress=="972 bellevue ave"]
datafire<-read.csv("fire_counts_2017.csv")
datafire$Address<-gsub("AVE","AV",datafire$Address)
tdatafire$Address<-tolower(datafire$Address)
datafire$Address<-tolower(datafire$Address)
South<-unlist(gregexpr(" s ",datafire$Address))
South<-as.numeric(gsub(-1,0,South))
datafire$Address<-gsub(" s "," ",datafire$Address)
datafire$Address[South==TRUE]<-paste(datafire$Address[South==TRUE],"s")
North<-unlist(gregexpr(" n ",datafire$Address))
North<-as.numeric(gsub(-1,0,North))
datafire$Address<-gsub(" n "," ",datafire$Address)
datafire$Address[North==TRUE]<-paste(datafire$Address[North==TRUE],"n")
East<-unlist(gregexpr(" e ",datafire$Address))
East<-as.numeric(gsub(-1,0,East))
datafire$Address<-gsub(" e "," ",datafire$Address)
datafire$Address[East==TRUE]<-paste(datafire$Address[East==TRUE],"e")
West<-unlist(gregexpr(" w ",datafire$Address))
West<-as.numeric(gsub(-1,0,West))
datafire$Address<-gsub(" w "," ",datafire$Address)
datafire$Address[West==TRUE]<-paste(datafire$Address[West==TRUE],"w")
datamergedfire<-merge(datamerged,datafire,by.x="newaddress",by.y="Address"
,all.y=TRUE)
View(datamergedfire)
datafire<-read.csv("fire_counts_2017.csv")
datafire$Address<-gsub("Ave","AV",datafire$Address)
datafire$Address<-tolower(datafire$Address)
South<-unlist(gregexpr(" s ",datafire$Address))
South<-as.numeric(gsub(-1,0,South))
datafire$Address<-gsub(" s "," ",datafire$Address)
datafire$Address[South==TRUE]<-paste(datafire$Address[South==TRUE],"s")
datafire$Address<-gsub(" n "," ",datafire$Address)
datafire$Address[North==TRUE]<-paste(datafire$Address[North==TRUE],"n")
East<-unlist(gregexpr(" e ",datafire$Address))
datafire$Address<-gsub(" e "," ",datafire$Address)
datafire$Address[East==TRUE]<-paste(datafire$Address[East==TRUE],"e")
West<-unlist(gregexpr(" w ",datafire$Address))
datafire$Address<-gsub(" w "," ",datafire$Address)
datafire$Address[West==TRUE]<-paste(datafire$Address[West==TRUE],"w")
datamergedfire<-merge(datamerged,datafire,by.x="newaddress",by.y="Address"
,all.y=TRUE)
North<-as.numeric(gsub(-1,0,North))
North<-unlist(gregexpr(" n ",datafire$Address))
East<-as.numeric(gsub(-1,0,East))
West<-as.numeric(gsub(-1,0,West))
View(datamergedfire)
save(datamerged,file="datamerged.Rdata")
write.csv(datamerged,"sda.csv")
dataC<-read.csv('FinalData.csv')
View(dataC)
View(datamerged)
datamerged$block.address<-datamerged$block.address+", Syracuse, NY"
datamerged$block.address<-paste(datamerged$block.address,", Syracuse, NY")
dataC<-read.csv('FinalData.csv')
datamerged$block.address<-paste(datamerged$block.address,", Syracuse, NY")
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.y=TRUE)
colnames(dataC)
dataC<-read.csv('FinalData.csv')
datamerged$block.address<-paste(datamerged$block.address,", Syracuse, NY")
load("C:/Users/Lan/Documents/GitHub/IST600_GroupB/Data/datamerged.Rdata")
datamerged$block.address<-paste(datamerged$block.address,", Syracuse, NY")
colnames(dataC)
colnames(dataC)[1]
colnames(dataC)[1]<-"Address"
colnames(dataC)
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.y=TRUE)
View(dataC)
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.x=TRUE)
View(dataABC)
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.y=TRUE)
View(dataABC)
load('datamerged.Rdata')
?paste
dataC<-read.csv('FinalData.csv')
colnames(dataC)[1]<-"Address"
load('datamerged.Rdata')
datamerged$block.address<-paste(datamerged$block.address,", Syracuse, NY",sep="")
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.y=TRUE)
View(dataABC)
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
)
,all.y=TRUE
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
)
View(dataABC)
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address"
,all.x=TRUE,all.y=TRUE)
noAB<-dataABC[is.na(dataABC$Sec_Block),]
noC<-dataABC[is.na(dataABC$Occupied),]
View(noAB)
View(noC)
levels(noC$block.address)
levels(as.factor(noC$block.address))
levels(as.factor(noC$block.address))>-temp
levels(as.factor(noC$block.address))->temp
View(data.frame(temp))
levels(as.factor(datamerged$block.address))->temp
View(data.frame(temp))
dataABC<-merge(datamerged,dataC,by.x="block.address",by.y="Address")
View(dataABC)
sava(dataABC,'dataABC.RData')
save(dataABC,'dataABC.RData')
save(dataABC,"dataABC.RData")
save(dataABC,"dataABC.RData")
?aCW
?save
save(dataABC,file="dataABC.RData")
